using NUnit.Framework;

namespace Algorithm.Examples.Tests
{
    public class FTests
    {
        [Test]
        public void Test1()
        {
            const string input = @"4 5
1 2 3 4
5 6 7 8 9";
            const string output = @"5 16 34 60 70 70 59 36";
            Tester.InOutTest(F.Solve, input, output);
        }

        [Test]
        public void Test2()
        {
            const string input = @"1 1
10000000
10000000";
            const string output = @"871938225";
            Tester.InOutTest(F.Solve, input, output);
        }

        [Test]
        public void Test3()
        {
            const string input = @"61 61
6 9 0 6 6 5 7 7 2 6 9 6 8 0 5 8 5 6 4 1 4 9 9 7 4 6 4 9 9 4 4 8 3 9 6 0 6 3 8 0 1 5 9 7 6 1 6 2 3 9 8 3 1 1 7 0 1 2 1 0 4
7 2 3 1 9 7 8 5 9 3 0 6 6 0 8 3 2 9 3 2 4 7 4 8 1 3 9 0 9 2 0 4 5 0 0 4 4 4 7 0 3 4 1 2 6 5 6 3 8 4 3 4 1 2 4 2 8 0 4 7 2";
            const string output =
                @"42 75 36 75 117 188 194 240 249 308 291 352 411 319 401 495 426 482 550 429 506 607 600 645 632 569 762 781 758 892 701 800 917 902 778 901 857 876 1030 887 841 893 1021 924 991 988 992 1049 1147 1138 1222 1075 1064 1141 1220 1174 1143 1117 1114 1230 1159 1048 1062 1044 1037 1062 1070 866 987 958 906 
958 853 758 852 776 734 777 697 688 679 678 680 528 540 505 597 560 468 480 466 401 492 337 389 354 324 368 357 260 302 253 282 200 193 226 164 131 183 132 118 45 57 77 42 23 
52 11 18 28 8";
            Tester.InOutTest(F.Solve, input, output);
        }

        [Test]
        public void Test4()
        {
            const string input = @"61 61
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1";
            const string output =
                @"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
58 59 60 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 
4 3 2 1";
            Tester.InOutTest(F.Solve, input, output);
        }
    }
}